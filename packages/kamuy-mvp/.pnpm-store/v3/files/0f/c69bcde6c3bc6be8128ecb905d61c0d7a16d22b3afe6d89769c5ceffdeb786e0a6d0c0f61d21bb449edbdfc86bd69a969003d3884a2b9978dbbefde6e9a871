import{hasVitePlugins as hasVitePlugins2}from"@storybook/builder-vite";import dedent from"ts-dedent";import{logger}from"@storybook/node-logger";import{hasVitePlugins}from"@storybook/builder-vite";async function handleSvelteKit(plugins,options){let frameworkPreset=await options.presets.apply("framework",{},options),framework=typeof frameworkPreset=="string"?frameworkPreset:frameworkPreset.name;if(await hasVitePlugins(plugins,["vite-plugin-svelte-kit","vite-plugin-sveltekit-setup","vite-plugin-sveltekit-compile"])&&framework!=="@storybook/sveltekit")throw logger.error(dedent`
      We've detected a SvelteKit project using the @storybook/svelte-vite framework, which is not supported in Storybook 7.0
      Please use the @storybook/sveltekit framework instead.
      You can migrate automatically by running
      
      npx sb@next automigrate

      See https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#sveltekit-needs-the-storybooksveltekit-framework
      `),new Error}import MagicString from"magic-string";import path from"path";import fs from"fs";import svelteDoc from"sveltedoc-parser";import{logger as logger2}from"@storybook/node-logger";import{preprocess}from"svelte/compiler";import{createFilter}from"vite";function getNameFromFilename(filename){if(!filename)return null;let parts=filename.split(/[/\\]/).map(encodeURI);if(parts.length>1){let indexMatch=parts[parts.length-1].match(/^index(\.\w+)/);indexMatch&&(parts.pop(),parts[parts.length-1]+=indexMatch[1])}let base=parts.pop()?.replace(/%/g,"u").replace(/\.[^.]+$/,"").replace(/[^a-zA-Z_$0-9]+/g,"_").replace(/^_/,"").replace(/_$/,"").replace(/^(\d)/,"_$1");if(!base)throw new Error(`Could not derive component name from file ${filename}`);return base[0].toUpperCase()+base.slice(1)}function svelteDocgen(svelteOptions={}){let cwd=process.cwd(),{preprocess:preprocessOptions,logDocgen=!1}=svelteOptions,filter=createFilter(/\.(svelte)$/);return{name:"storybook:svelte-docgen-plugin",async transform(src,id){if(!filter(id))return;let resource=path.relative(cwd,id),docOptions;if(preprocessOptions){let src2=fs.readFileSync(resource).toString(),{code:fileContent}=await preprocess(src2,preprocessOptions,{filename:resource});docOptions={fileContent}}else docOptions={filename:resource};let options={...docOptions,version:3},s=new MagicString(src);try{let componentDoc=await svelteDoc.parse(options),file=path.basename(resource);componentDoc.name=path.basename(file);let componentName=getNameFromFilename(resource);s.append(`;${componentName}.__docgen = ${JSON.stringify(componentDoc)}`)}catch(error){logDocgen&&logger2.error(error)}return{code:s.toString(),map:s.generateMap({hires:!0,source:id})}}}}var core={builder:"@storybook/builder-vite",renderer:"@storybook/svelte"},viteFinal=async(config,options)=>{let{plugins=[]}=config,{svelte,loadSvelteConfig}=await import("@sveltejs/vite-plugin-svelte"),svelteConfig=await loadSvelteConfig();return await hasVitePlugins2(plugins,["vite-plugin-svelte"])||plugins.push(svelte()),plugins.push(svelteDocgen(svelteConfig)),await handleSvelteKit(plugins,options),{...config,plugins}};export{core,viteFinal};
